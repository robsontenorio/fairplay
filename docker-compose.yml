version: "3"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

####### VOLUMES  #######
volumes:
  caddy:
    driver: local
  mysql:
    driver: "local"
  phpmyadmin:
    driver: local
  redis:
    driver: local
  node:
    driver: local

services:
  ######## MYSQL ########
  mysql:
    image: ${APP_NAME}-mysql:1.0
    container_name: ${APP_NAME}-mysql
    build:
      context: ./docker/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=UTC
    volumes:
      - ${DATA_STORAGE_PATH}/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend

  ######## PHP-FPM ########
  php-fpm:
    image: ${APP_NAME}-php-fpm:1.0
    container_name: "${APP_NAME}-php-fpm"
    build:
      context: ./docker/php-fpm
      args:
        - PHP_VERSION=${PHP_VERSION}
    volumes:
      - ./docker/php-fpm/php72.ini:/usr/local/etc/php/php.ini
      - ${APP_BACKEND_PATH}:/var/www/api
    expose:
      - "9000"
    networks:
      - backend

  ######## NODE  ########
  node:
    image: ${APP_NAME}-node:1.0
    container_name: ${APP_NAME}-node
    build:
      context: ./docker/node
    environment:
      - HOST=0.0.0.0
    volumes:
      - ${APP_FRONTEND_PATH}:/var/www
    entrypoint: ${NODE_ENTRYPOINT}
    ports:
      - "3000:3000"
    networks:
      - backend

  ######## CADDY ########
  caddy:
    image: ${APP_NAME}-caddy:1.0
    container_name: "${APP_NAME}-caddy"
    build:
      context: ./docker/caddy
    volumes:
      - ${APP_BACKEND_PATH}:/var/www/api:cached
      - ${APP_FRONTEND_PATH}:/var/www/web:cached
      - ${DATA_STORAGE_PATH}/caddy:/root/.caddy
      - ${CADDY_CONF}:/etc/Caddyfile
      - ${CADDY_LOG}:/var/log/caddy
    ports:
      - "${CADDY_HTTP_PORT}:80"
      - 8081:8081
      - "${CADDY_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - backend
      - frontend

  ######## PHPMYADMIN ########
  phpmyadmin:
    image: "${APP_NAME}-pma:1.0"
    container_name: "${APP_NAME}-pma"
    build: ./docker/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"
    depends_on:
      - mysql
    networks:
      - backend
      - frontend

  ######## REDIS ########
  redis:
    image: "${APP_NAME}-redis:1.0"
    container_name: "${APP_NAME}-redis"
    build: ./docker/redis
    volumes:
      - ${DATA_STORAGE_PATH}/redis:/data
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - backend

  ######## LARAVEL ECHO SERVER ########
  laravel-echo-server:
    image: "${APP_NAME}-laravel-echo-server:1.0"
    container_name: "${APP_NAME}-laravel-echo-server"
    build:
      context: ./docker/laravel-echo-server
    volumes:
      - ./docker/laravel-echo-server/laravel-echo-server.json:/app/laravel-echo-server.json:ro
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT}:6001"
    links:
      - redis
    networks:
      - frontend
      - backend

  ######## PHP-WORKER (QUEUES) ########

  php-worker:
    image: "${APP_NAME}-php-worker:1.0"
    container_name: "${APP_NAME}-php-worker"
    build:
      context: ./docker/php-worker
      args:
        - PHP_VERSION=${PHP_VERSION}
    volumes:
      - ${APP_BACKEND_PATH}:/var/www:cached
      - ./docker/php-worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - php-fpm
      - redis
    networks:
      - backend

  ######## CRONTAB ########
  crontab:
    image: "${APP_NAME}-crontab:1.0"
    container_name: "${APP_NAME}-crontab"
    build:
      context: ./docker/crontab
      args:
        - PHP_VERSION=${PHP_VERSION}
    volumes:
      - ${APP_BACKEND_PATH}:/var/www:cached
    depends_on:
      - php-fpm
      - redis
    networks:
      - backend
